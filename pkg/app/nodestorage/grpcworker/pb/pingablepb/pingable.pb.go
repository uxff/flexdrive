// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pingable.proto

/*
Package pingablepb is a generated protocol buffer package.

It is generated from these files:
        pingable.proto

It has these top-level messages:
        NodeMember
        PingRequest
        PingResponse
        MsgRequest
        MsgResponse
*/
package pingablepb

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 成员节点
type NodeMember struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	MasterId       string `protobuf:"bytes,2,opt,name=masterId" json:"masterId,omitempty"`
	LastRegistered string `protobuf:"bytes,3,opt,name=lastRegistered" json:"lastRegistered,omitempty"`
	ServiceAddr    string `protobuf:"bytes,4,opt,name=serviceAddr" json:"serviceAddr,omitempty"`
	ClusterId      string `protobuf:"bytes,5,opt,name=clusterId" json:"clusterId,omitempty"`
}

func (m *NodeMember) Reset()                    { *m = NodeMember{} }
func (m *NodeMember) String() string            { return proto.CompactTextString(m) }
func (*NodeMember) ProtoMessage()               {}
func (*NodeMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeMember) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NodeMember) GetMasterId() string {
	if m != nil {
		return m.MasterId
	}
	return ""
}

func (m *NodeMember) GetLastRegistered() string {
	if m != nil {
		return m.LastRegistered
	}
	return ""
}

func (m *NodeMember) GetServiceAddr() string {
	if m != nil {
		return m.ServiceAddr
	}
	return ""
}

func (m *NodeMember) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

// 心跳请求结构体
type PingRequest struct {
	FromId   string `protobuf:"bytes,1,opt,name=fromId" json:"fromId,omitempty"`
	MasterId string `protobuf:"bytes,2,opt,name=masterId" json:"masterId,omitempty"`
	MetaData string `protobuf:"bytes,3,opt,name=metaData" json:"metaData,omitempty"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PingRequest) GetFromId() string {
	if m != nil {
		return m.FromId
	}
	return ""
}

func (m *PingRequest) GetMasterId() string {
	if m != nil {
		return m.MasterId
	}
	return ""
}

func (m *PingRequest) GetMetaData() string {
	if m != nil {
		return m.MetaData
	}
	return ""
}

// 心跳响应结构体
type PingResponse struct {
	Code     int32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg      string        `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Members  []*NodeMember `protobuf:"bytes,3,rep,name=members" json:"members,omitempty"`
	MetaData string        `protobuf:"bytes,4,opt,name=metaData" json:"metaData,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PingResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PingResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *PingResponse) GetMembers() []*NodeMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *PingResponse) GetMetaData() string {
	if m != nil {
		return m.MetaData
	}
	return ""
}

// 消息请求结构体
type MsgRequest struct {
	FromId string `protobuf:"bytes,1,opt,name=fromId" json:"fromId,omitempty"`
	ToId   string `protobuf:"bytes,2,opt,name=toId" json:"toId,omitempty"`
	MsgId  string `protobuf:"bytes,3,opt,name=msgId" json:"msgId,omitempty"`
	Action string `protobuf:"bytes,4,opt,name=action" json:"action,omitempty"`
	Data   string `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
}

func (m *MsgRequest) Reset()                    { *m = MsgRequest{} }
func (m *MsgRequest) String() string            { return proto.CompactTextString(m) }
func (*MsgRequest) ProtoMessage()               {}
func (*MsgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MsgRequest) GetFromId() string {
	if m != nil {
		return m.FromId
	}
	return ""
}

func (m *MsgRequest) GetToId() string {
	if m != nil {
		return m.ToId
	}
	return ""
}

func (m *MsgRequest) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *MsgRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *MsgRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// 消息想用结构体
type MsgResponse struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	MsgId  string `protobuf:"bytes,3,opt,name=msgId" json:"msgId,omitempty"`
	Action string `protobuf:"bytes,4,opt,name=action" json:"action,omitempty"`
	Data   string `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
}

func (m *MsgResponse) Reset()                    { *m = MsgResponse{} }
func (m *MsgResponse) String() string            { return proto.CompactTextString(m) }
func (*MsgResponse) ProtoMessage()               {}
func (*MsgResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MsgResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MsgResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *MsgResponse) GetMsgId() string {
	if m != nil {
		return m.MsgId
	}
	return ""
}

func (m *MsgResponse) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *MsgResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*NodeMember)(nil), "pingablepb.NodeMember")
	proto.RegisterType((*PingRequest)(nil), "pingablepb.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "pingablepb.PingResponse")
	proto.RegisterType((*MsgRequest)(nil), "pingablepb.MsgRequest")
	proto.RegisterType((*MsgResponse)(nil), "pingablepb.MsgResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PingableInterface service

type PingableInterfaceClient interface {
	// ping 心跳服务
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// msg 消息服务 用于接收同伴发送来的消息
	Msg(ctx context.Context, in *MsgRequest, opts ...grpc.CallOption) (*MsgResponse, error)
}

type pingableInterfaceClient struct {
	cc *grpc.ClientConn
}

func NewPingableInterfaceClient(cc *grpc.ClientConn) PingableInterfaceClient {
	return &pingableInterfaceClient{cc}
}

func (c *pingableInterfaceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/pingablepb.PingableInterface/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingableInterfaceClient) Msg(ctx context.Context, in *MsgRequest, opts ...grpc.CallOption) (*MsgResponse, error) {
	out := new(MsgResponse)
	err := grpc.Invoke(ctx, "/pingablepb.PingableInterface/Msg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PingableInterface service

type PingableInterfaceServer interface {
	// ping 心跳服务
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// msg 消息服务 用于接收同伴发送来的消息
	Msg(context.Context, *MsgRequest) (*MsgResponse, error)
}

func RegisterPingableInterfaceServer(s *grpc.Server, srv PingableInterfaceServer) {
	s.RegisterService(&_PingableInterface_serviceDesc, srv)
}

func _PingableInterface_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingableInterfaceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pingablepb.PingableInterface/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingableInterfaceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PingableInterface_Msg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingableInterfaceServer).Msg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pingablepb.PingableInterface/Msg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingableInterfaceServer).Msg(ctx, req.(*MsgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PingableInterface_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pingablepb.PingableInterface",
	HandlerType: (*PingableInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _PingableInterface_Ping_Handler,
		},
		{
			MethodName: "Msg",
			Handler:    _PingableInterface_Msg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pingable.proto",
}

func init() { proto.RegisterFile("pingable.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x35, 0x4d, 0x5a, 0xed, 0x44, 0x8a, 0x0e, 0xd2, 0x86, 0xe2, 0xa1, 0xe4, 0x20, 0x3d, 0x15,
	0xa9, 0x17, 0xc1, 0x93, 0xe0, 0x25, 0x87, 0x4a, 0xc9, 0xdd, 0xc3, 0x26, 0x3b, 0x0d, 0x81, 0x26,
	0x1b, 0xb3, 0x5b, 0x0f, 0x1e, 0x3d, 0xfa, 0x2b, 0xfc, 0xa9, 0x92, 0xcd, 0xa6, 0xe9, 0x07, 0x28,
	0xe2, 0x6d, 0xde, 0x9b, 0xc9, 0xbc, 0x37, 0x6f, 0x09, 0x0c, 0x8a, 0x34, 0x4f, 0x58, 0xb4, 0xa6,
	0x59, 0x51, 0x0a, 0x25, 0x10, 0x1a, 0x5c, 0x44, 0xfe, 0x97, 0x05, 0xf0, 0x2c, 0x38, 0x2d, 0x28,
	0x8b, 0xa8, 0xc4, 0x01, 0x74, 0x52, 0xee, 0x59, 0x13, 0x6b, 0xda, 0x0f, 0x3b, 0x29, 0xc7, 0x31,
	0x9c, 0x65, 0x4c, 0x2a, 0x2a, 0x03, 0xee, 0x75, 0x34, 0xbb, 0xc5, 0x78, 0x03, 0x83, 0x35, 0x93,
	0x2a, 0xa4, 0x24, 0xad, 0x18, 0xe2, 0x9e, 0xad, 0x27, 0x0e, 0x58, 0x9c, 0x80, 0x2b, 0xa9, 0x7c,
	0x4b, 0x63, 0x7a, 0xe4, 0xbc, 0xf4, 0x1c, 0x3d, 0xb4, 0x4b, 0xe1, 0x35, 0xf4, 0xe3, 0xf5, 0xc6,
	0xc8, 0x74, 0x75, 0xbf, 0x25, 0xfc, 0x17, 0x70, 0x97, 0x69, 0x9e, 0x84, 0xf4, 0xba, 0x21, 0xa9,
	0x70, 0x08, 0xbd, 0x55, 0x29, 0xb2, 0xa0, 0xb1, 0x69, 0xd0, 0x8f, 0x56, 0xab, 0x1e, 0x29, 0xf6,
	0xc4, 0x14, 0x33, 0x26, 0xb7, 0xd8, 0xff, 0xb0, 0xe0, 0xbc, 0xde, 0x2f, 0x0b, 0x91, 0x4b, 0x42,
	0x04, 0x27, 0x16, 0x9c, 0xf4, 0xfa, 0x6e, 0xa8, 0x6b, 0xbc, 0x00, 0x3b, 0x93, 0x89, 0xd9, 0x5b,
	0x95, 0x78, 0x0b, 0xa7, 0x99, 0xce, 0x4c, 0x7a, 0xf6, 0xc4, 0x9e, 0xba, 0xf3, 0xe1, 0xac, 0x8d,
	0x75, 0xd6, 0x46, 0x1a, 0x36, 0x63, 0x7b, 0x26, 0x9c, 0x03, 0x13, 0xef, 0x00, 0x0b, 0xf9, 0xeb,
	0x89, 0x08, 0x8e, 0x12, 0xdb, 0xf3, 0x74, 0x8d, 0x57, 0xd0, 0xcd, 0x64, 0x12, 0x34, 0xe1, 0xd7,
	0xa0, 0xda, 0xc0, 0x62, 0x95, 0x8a, 0xdc, 0x28, 0x19, 0x54, 0x6d, 0xe0, 0x95, 0x7e, 0x1d, 0xb2,
	0xae, 0xfd, 0x0d, 0xb8, 0x5a, 0xfb, 0x4f, 0xe7, 0xff, 0x5b, 0x76, 0xfe, 0x69, 0xc1, 0xe5, 0xd2,
	0x24, 0x16, 0xe4, 0x8a, 0xca, 0x15, 0x8b, 0x09, 0x1f, 0xc0, 0xa9, 0x48, 0x1c, 0xed, 0xa6, 0xb9,
	0xf3, 0xfc, 0x63, 0xef, 0xb8, 0x51, 0x1b, 0xf7, 0x4f, 0xf0, 0x1e, 0xec, 0x85, 0x4c, 0x70, 0xef,
	0x25, 0xda, 0x58, 0xc7, 0xa3, 0x23, 0xbe, 0xf9, 0x32, 0xea, 0xe9, 0x3f, 0xe3, 0xee, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0x80, 0xe2, 0x48, 0x3e, 0x2b, 0x03, 0x00, 0x00,
}
